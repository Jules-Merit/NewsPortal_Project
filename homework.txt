1. Создать двух пользователей
user1 = User.objetcs.create_user('user1')
user2 = User.objetcs.create_user('user2')

2. Создать два объекта модели Author, связанные с пользователями.
author1 = Author.objects.create(user=user1)
author2 = Author.objects.create(user=user2)

3. Добавить 4 категории в модель Category
Science = Category.objects.create(cat_name='Science')
Technology = Category.objects.create(cat_name='Technology')
Sport = Category.objects.create(cat_name='Sport')
Health = Category.objects.create(cat_name='Health')

4. Добавить 2 статьи и 1 новость.
post1 = Post.objects.create(post_type='PO', head_text='some text', text='some text, author=author1)
post2 = Post.objects.create(post_type='PO', head_text='some text', text='some text, author=author1)
post3 = Post.objects.create(post_type='NE', head_text='some text', text='some text, author=author2)

5. Присвоить им категории (как минимум в одной статье/новости должно быть не меньше 2 категорий).
PostCategory.objects.create(post=post1, cat=Health)
PostCategory.objects.create(post=post1, cat=Sport)
PostCategory.objects.create(post=post2, cat=Science)
PostCategory.objects.create(post=post3, cat=Technology)

6. Создать как минимум 4 комментария к разным объектам модели Post (в каждом объекте должен быть как минимум один комментарий).
comment = Comment.objects.create(comment='some comment', post=post1, user=user1)
Остальные по аналогии

7. Применяя функции like() и dislike() к статьям/новостям и комментариям, скорректировать рейтинги этих объектов.
post1.like()
post2.like()
comment.like()
post3.rating = 4   (как вариант корректировки)
post3.save()

8. Обновить рейтинги пользователей.
author1.update_rating()
author2.update_rating()

9. Вывести username и рейтинг лучшего пользователя (применяя сортировку и возвращая поля первого объекта).
best_author = Author.objects.order_by('-rating').first()
best_author.rating
best_user = User.objects.get(pk=best_author.user_id)
best_user.username

10. Вывести дату добавления, username автора, рейтинг, заголовок и превью лучшей статьи, основываясь на лайках/дислайках к этой статье.
import datetime
best_post = Post.objects.order_by('-rating').first()
best_post.post_data.strftime('%Y-%m-%d')
 author = Author.objects.get(pk=best_post.author_id)
 user = User.objects.get(pk=author.user_id)
user.username()
best_post.rating
best_post.head_text
best_post.preview

11. Вывести все комментарии (дата, пользователь, рейтинг, текст) к этой статье.
comment = Comment.objects.filter(post_id=best_post.pk).values('comment_data', 'user', 'rating', 'comment')
comment.values('comment_data', 'user', 'rating', 'comment')